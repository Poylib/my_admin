---
description: 
globs: 
alwaysApply: true
---

# Full-Stack Expert Admin Page for Personal Blog

## **Overview**
This is a full-stack web application built using **Next.js 15 App Router** for managing a personal blog. The application allows administrators to manage blog posts, tags, images, social links, likes, and comments. The backend database is structured using relational tables to handle different entities such as posts, tags, images, and interactions like likes and comments.
- use shadcn UI
## Using Shadcn with Latest Version

When using **shadcn**, make sure to use the latest version by specifying `@latest`. For example, to add a button component, run the following command:

```bash
npx shadcn@latest add button
```


## **Data Structure**

### 1. posts (게시글)
게시글의 기본 정보를 저장하는 테이블
| 필드명 | 타입 | 설명 | 제약조건 |
|-----|---|---|-----|
| id | uuid | 게시글 고유 ID | Primary Key, Default: uuid_generate_v4() |
| title_ko | text | 한국어 제목 | Not Null |
| title_en | text | 영어 제목 | Null 허용 |
| content_ko | text | 한국어 내용 | Not Null |
| content_en | text | 영어 내용 | Null 허용 |
| thumbnail_url | text | 썸네일 이미지 URL | Not Null |
| created_at | timestamptz | 생성일시 | Not Null, Default: now() |
| updated_at | timestamptz | 수정일시 | Not Null, Default: now() |
| author_id | uuid | 작성자 ID | Not Null, Foreign Key: auth.users(id) |
| view_count | integer | 조회수 | Default: 0 |
| is_published | boolean | 발행 여부 | Default: true |
| slug | text | URL 슬러그 | Not Null, Unique |
| has_translation | boolean | 영어 번역 존재 여부 | Default: false |

### 2. tags (태그)
태그 정보를 저장하는 테이블
| 필드명 | 타입 | 설명 | 제약조건 |
|-----|---|---|-----|
| id | uuid | 태그 고유 ID | Primary Key, Default: uuid_generate_v4() |
| name_ko | text | 한국어 태그 이름 | Not Null, Unique |
| name_en | text | 영어 태그 이름 | Null 허용, Unique |
| slug | text | URL 슬러그 | Not Null, Unique |
| created_at | timestamptz | 생성일시 | Not Null, Default: now() |

### 3. post_tags (게시글-태그 연결)
게시글과 태그의 다대다 관계를 관리하는 테이블
| 필드명 | 타입 | 설명 | 제약조건 |
|-----|---|---|-----|
| post_id | uuid | 게시글 ID | Primary Key, Foreign Key: posts(id), On Delete: Cascade |
| tag_id | uuid | 태그 ID | Primary Key, Foreign Key: tags(id), On Delete: Cascade |
| created_at | timestamptz | 생성일시 | Not Null, Default: now() |

